// 1. Add these imports to your home view:
// import 'dart:convert';
// import 'package:http/http.dart' as http;

// 2. Add this class after your imports:
class AEWUser {
  final int id;
  final String name;
  final String position;
  final String barangay;
  final String contact;
  final String email;
  final String specialization;
  final int yearsOfService;

  AEWUser({
    required this.id,
    required this.name,
    required this.position,
    required this.barangay,
    required this.contact,
    required this.email,
    required this.specialization,
    required this.yearsOfService,
  });

  factory AEWUser.fromJson(Map<String, dynamic> json) {
    return AEWUser(
      id: json['id'],
      name: json['name'],
      position: json['position'],
      barangay: json['barangay'],
      contact: json['contact'],
      email: json['email'],
      specialization: json['specialization'],
      yearsOfService: json['yearsOfService'],
    );
  }
}

// 3. Add these variables to your HomeViewState class:
List<AEWUser> _aewUsers = [];
bool _isLoadingAEW = false;

// 4. Add this method to fetch AEW data:
Future<void> _fetchAEWUsers() async {
  setState(() => _isLoadingAEW = true);
  
  final dio = 

  try {
    final response = await http.get(
      Uri.parse('${Config.baseUrl}/api/users/fetch-aew'),
      headers: {
        'Accept': 'application/json',
        'Authorization': 'Bearer ${Provider.of<UserViewModel>(context, listen: false).token}',
      },
    );

    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      final List<dynamic> aewList = data['aew_users'];
      
      setState(() {
        _aewUsers = aewList.map((json) => AEWUser.fromJson(json)).toList();
      });
    }
  } catch (e) {
    print('Error fetching AEW users: $e');
  } finally {
    setState(() => _isLoadingAEW = false);
  }
}

// 5. Update your initState method:
@override
void initState() {
  super.initState();
  _homeViewModel = HomeViewModel();
  WidgetsBinding.instance.addPostFrameCallback((_) {
    _homeViewModel.fetchUpcomingActivities();
    _homeViewModel.fetchOngoingActivities();
    _homeViewModel.fetchRecentActivities();
    _fetchAEWUsers(); // Add this line
  });
}

// 6. Replace the _buildAEWSection method:
Widget _buildAEWSection() {
  return Column(
    children: [
      Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          const Text(
            'Administrative Extension Worker',
            style: TextStyle(
              fontFamily: Config.primaryFont,
              fontSize: Config.fontSmall,
              fontWeight: Config.fontW600,
            ),
          ),
          TextButton(
            onPressed: () => _navigateToAllAEWs(context),
            child: const Text(
              'See all',
              style: TextStyle(
                fontFamily: Config.primaryFont,
                fontSize: Config.fontSmall,
                color: Config.tertiaryColor,
              ),
            ),
          ),
        ],
      ),
      Config.heightSmall,
      
      if (_isLoadingAEW)
        const Center(child: CircularProgressIndicator())
      else if (_aewUsers.isEmpty)
        Container(
          padding: const EdgeInsets.all(20),
          child: Column(
            children: [
              Icon(Icons.person_outline, size: 48, color: Colors.grey[400]),
              const SizedBox(height: 12),
              Text(
                'No AEW available',
                style: TextStyle(
                  fontFamily: Config.primaryFont,
                  fontSize: Config.fontSmall,
                  color: Colors.grey[600],
                ),
              ),
            ],
          ),
        )
      else
        Column(
          children: _aewUsers.take(2).map((aew) => Container(
            margin: const EdgeInsets.only(bottom: 12),
            child: GestureDetector(
              onTap: () => _showAEWDetails(context, aew),
              child: Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(color: Colors.grey.withOpacity(0.2)),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        CircleAvatar(
                          radius: 25,
                          backgroundColor: const Color(0xFF8ED968),
                          child: Text(
                            aew.name.split(' ').map((n) => n[0]).take(2).join(''),
                            style: const TextStyle(
                              fontFamily: Config.primaryFont,
                              fontSize: Config.fontSmall,
                              fontWeight: FontWeight.bold,
                              color: Colors.white,
                            ),
                          ),
                        ),
                        const SizedBox(width: 12),
                        Expanded(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                aew.name,
                                style: const TextStyle(
                                  fontFamily: Config.primaryFont,
                                  fontSize: Config.fontMedium,
                                  fontWeight: Config.fontW600,
                                  color: Color(0xFF524F4F),
                                ),
                              ),
                              const SizedBox(height: 2),
                              Text(
                                aew.position,
                                style: const TextStyle(
                                  fontFamily: Config.primaryFont,
                                  fontSize: Config.fontSmall,
                                  color: Config.tertiaryColor,
                                ),
                              ),
                            ],
                          ),
                        ),
                        Container(
                          padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                          decoration: BoxDecoration(
                            color: Colors.blue.withOpacity(0.1),
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Text(
                            '${aew.yearsOfService} yrs',
                            style: const TextStyle(
                              fontFamily: Config.primaryFont,
                              fontSize: 10,
                              color: Colors.blue,
                              fontWeight: FontWeight.w500,
                            ),
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 12),
                    Container(
                      padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                      decoration: BoxDecoration(
                        color: const Color(0xFF8ED968).withOpacity(0.1),
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Text(
                        aew.specialization,
                        style: const TextStyle(
                          fontFamily: Config.primaryFont,
                          fontSize: Config.fontSmall,
                          color: Color(0xFF6BB54A),
                          fontWeight: FontWeight.w500,
                        ),
                      ),
                    ),
                    const SizedBox(height: 12),
                    Row(
                      children: [
                        const Icon(Icons.location_on_outlined, size: 16, color: Colors.grey),
                        const SizedBox(width: 4),
                        Text(aew.barangay, style: const TextStyle(fontFamily: Config.primaryFont, fontSize: Config.fontSmall, color: Colors.grey)),
                        const SizedBox(width: 16),
                        const Icon(Icons.phone_outlined, size: 16, color: Colors.grey),
                        const SizedBox(width: 4),
                        Expanded(child: Text(aew.contact, style: const TextStyle(fontFamily: Config.primaryFont, fontSize: Config.fontSmall, color: Colors.grey))),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          )).toList(),
        ),
    ],
  );
}

// 7. Update the _showAEWDetails method:
void _showAEWDetails(BuildContext context, AEWUser aew) {
  showDialog(
    context: context,
    builder: (BuildContext context) {
      return AlertDialog(
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
        title: Column(
          children: [
            CircleAvatar(
              radius: 35,
              backgroundColor: const Color(0xFF8ED968),
              child: Text(
                aew.name.split(' ').map((n) => n[0]).take(2).join(''),
                style: const TextStyle(fontFamily: Config.primaryFont, fontSize: Config.fontMedium, fontWeight: FontWeight.bold, color: Colors.white),
              ),
            ),
            const SizedBox(height: 8),
            Text(aew.name, style: const TextStyle(fontFamily: Config.primaryFont, fontWeight: FontWeight.bold), textAlign: TextAlign.center),
            Text(aew.position, style: const TextStyle(fontFamily: Config.primaryFont, fontSize: Config.fontSmall, color: Colors.grey), textAlign: TextAlign.center),
          ],
        ),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            _buildDetailRow(Icons.work_outline, 'Specialization', aew.specialization),
            _buildDetailRow(Icons.location_on_outlined, 'Barangay', aew.barangay),
            _buildDetailRow(Icons.phone_outlined, 'Contact', aew.contact),
            _buildDetailRow(Icons.email_outlined, 'Email', aew.email),
            _buildDetailRow(Icons.timeline_outlined, 'Years of Service', '${aew.yearsOfService} years'),
          ],
        ),
        actions: [
          Row(
            children: [
              Expanded(
                child: TextButton.icon(
                  onPressed: () {
                    Navigator.pop(context);
                    _chatWithAew(aew.contact);
                  },
                  icon: const Icon(Icons.message),
                  label: const Text('Chat'),
                ),
              ),
            ],
          ),
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('Close', style: TextStyle(fontFamily: Config.primaryFont)),
          ),
        ],
      );
    },
  );
}